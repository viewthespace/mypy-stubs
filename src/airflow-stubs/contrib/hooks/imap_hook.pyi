from airflow import AirflowException as AirflowException, LoggingMixin as LoggingMixin
from airflow.hooks.base_hook import BaseHook as BaseHook
from typing import Any

class ImapHook(BaseHook):
    conn: Any
    mail_client: Any
    def __init__(self, imap_conn_id: str = ...) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exc_type, exc_val, exc_tb) -> None: ...
    def has_mail_attachment(self, name, mail_folder: str = ..., check_regex: bool = ...): ...
    def retrieve_mail_attachments(self, name, mail_folder: str = ..., check_regex: bool = ..., latest_only: bool = ..., not_found_mode: str = ...): ...
    def download_mail_attachments(self, name, local_output_directory, mail_folder: str = ..., check_regex: bool = ..., latest_only: bool = ..., not_found_mode: str = ...) -> None: ...

class Mail(LoggingMixin):
    mail: Any
    def __init__(self, mail_body) -> None: ...
    def has_attachments(self): ...
    def get_attachments_by_name(self, name, check_regex, find_first: bool = ...): ...

class MailPart:
    part: Any
    def __init__(self, part) -> None: ...
    def is_attachment(self): ...
    def has_matching_name(self, name): ...
    def has_equal_name(self, name): ...
    def get_file(self): ...
