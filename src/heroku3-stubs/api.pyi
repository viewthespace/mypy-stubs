from .helpers import is_collection as is_collection
from .models import Plan as Plan, RateLimit as RateLimit
from .models.account import Account as Account
from .models.account.feature import AccountFeature as AccountFeature
from .models.addon import Addon as Addon
from .models.app import App as App
from .models.configvars import ConfigVars as ConfigVars
from .models.dyno import Dyno as Dyno
from .models.invoice import Invoice as Invoice
from .models.key import Key as Key
from .models.logsession import LogSession as LogSession
from .models.oauth import OAuthAuthorization as OAuthAuthorization, OAuthClient as OAuthClient, OAuthToken as OAuthToken
from .rendezvous import Rendezvous as Rendezvous
from .structures import KeyedListResource as KeyedListResource, SSHKeyListResource as SSHKeyListResource
from pprint import pprint as pprint
from typing import Any

HEROKU_URL: str
HEROKU_HEADERS: Any

class RateLimitExceeded(Exception): ...
class MaxRangeExceeded(Exception): ...

class HerokuCore:
    def __init__(self, session: Any | None = ...) -> None: ...
    def authenticate(self, api_key): ...
    @property
    def is_authenticated(self): ...

class Heroku(HerokuCore):
    def __init__(self, session: Any | None = ...) -> None: ...
    def account(self): ...
    def addons(self, app_id_or_name, **kwargs): ...
    def addon_services(self, id_or_name: Any | None = ..., **kwargs): ...
    def apps(self, **kwargs): ...
    def app(self, id_or_name): ...
    def create_app(self, name: Any | None = ..., stack_id_or_name: str = ..., region_id_or_name: Any | None = ..., organization: Any | None = ...): ...
    def keys(self, **kwargs): ...
    def invoices(self, **kwargs): ...
    def labs(self, **kwargs): ...
    def features(self, **kwargs): ...
    def oauthauthorization(self, oauthauthorization_id): ...
    def oauthauthorizations(self, **kwargs): ...
    def oauthauthorization_create(self, scope, oauthclient_id: Any | None = ..., description: Any | None = ...): ...
    def oauthauthorization_delete(self, oauthauthorization_id): ...
    def oauthclient(self, oauthclient_id): ...
    def oauthclients(self, **kwargs): ...
    def oauthclient_create(self, name, redirect_uri): ...
    def oauthclient_delete(self, oauthclient_id): ...
    def oauthtoken_create(self, client_secret: Any | None = ..., grant_code: Any | None = ..., grant_type: Any | None = ..., refresh_token: Any | None = ...): ...
    def run_command_on_app(self, appname, command, size: int = ..., attach: bool = ..., printout: bool = ..., env: Any | None = ...): ...
    @property
    def rate_limit(self): ...
    def ratelimit_remaining(self): ...
    def stream_app_log(self, app_id_or_name, dyno: Any | None = ..., lines: int = ..., source: Any | None = ..., timeout: bool = ...): ...
    def get_app_log(self, app_id_or_name, dyno: Any | None = ..., lines: int = ..., source: Any | None = ..., timeout: bool = ...): ...
    def update_appconfig(self, app_id_or_name, config): ...
    @property
    def last_request_id(self): ...

class ResponseError(ValueError): ...
