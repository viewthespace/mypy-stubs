from airflow.configuration import conf as conf
from airflow.exceptions import AirflowException as AirflowException
from airflow.utils.log.file_task_handler import FileTaskHandler as FileTaskHandler
from airflow.utils.log.logging_mixin import LoggingMixin as LoggingMixin
from typing import Any

class GCSTaskHandler(FileTaskHandler, LoggingMixin):
    remote_base: Any
    log_relative_path: str
    closed: bool
    upload_on_close: bool
    def __init__(self, base_log_folder, gcs_log_folder, filename_template) -> None: ...
    def hook(self): ...
    def set_context(self, ti) -> None: ...
    def close(self) -> None: ...
    def gcs_read(self, remote_log_location): ...
    def gcs_write(self, log, remote_log_location, append: bool = ...) -> None: ...
    @staticmethod
    def parse_gcs_url(gsurl): ...
