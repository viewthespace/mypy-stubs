import datetime
from airflow.jobs import BackfillJob as BackfillJob
from airflow.models import BaseOperator as BaseOperator, DagRun as DagRun, TaskInstance as TaskInstance
from airflow.operators.subdag_operator import SubDagOperator as SubDagOperator
from airflow.utils import timezone as timezone
from airflow.utils.db import provide_session as provide_session
from airflow.utils.state import State as State
from typing import Any, Iterable

def set_state(tasks: Iterable[BaseOperator], execution_date: datetime.datetime, upstream: bool = ..., downstream: bool = ..., future: bool = ..., past: bool = ..., state=..., commit: bool = ..., session: Any | None = ...): ...
def all_subdag_tasks_query(sub_dag_run_ids, session, state, confirmed_dates): ...
def get_all_dag_task_query(dag, session, state, task_ids, confirmed_dates): ...
def get_subdag_runs(dag, session, state, task_ids, commit, confirmed_dates): ...
def verify_dagruns(dag_runs, commit, state, session, current_task) -> None: ...
def verify_dag_run_integrity(dag, dates): ...
def find_task_relatives(tasks, downstream, upstream) -> None: ...
def get_execution_dates(dag, execution_date, future, past): ...
def set_dag_run_state_to_success(dag, execution_date, commit: bool = ..., session: Any | None = ...): ...
def set_dag_run_state_to_failed(dag, execution_date, commit: bool = ..., session: Any | None = ...): ...
def set_dag_run_state_to_running(dag, execution_date, commit: bool = ..., session: Any | None = ...): ...
