from airflow.exceptions import AirflowConfigException as AirflowConfigException
from airflow.utils.module_loading import import_string as import_string
from backports.configparser import ConfigParser
from typing import Any

log: Any

def generate_fernet_key(): ...
def expand_env_var(env_var): ...
def run_command(command): ...

DEFAULT_CONFIG: Any
DEFAULT_CONFIG_FILE_PATH: Any
TEST_CONFIG: Any
TEST_CONFIG_FILE_PATH: Any

def default_config_yaml(): ...

class AirflowConfigParser(ConfigParser):
    sensitive_config_values: Any
    deprecated_options: Any
    deprecated_values: Any
    def optionxform(self, optionstr): ...
    airflow_defaults: Any
    is_validated: bool
    def __init__(self, default_config: Any | None = ..., *args, **kwargs) -> None: ...
    def get(self, section, key, **kwargs): ...
    def getimport(self, section, key, **kwargs): ...
    def getboolean(self, section, key, **kwargs): ...
    def getint(self, section, key, **kwargs): ...
    def getfloat(self, section, key, **kwargs): ...
    def read(self, filenames, **kwargs) -> None: ...
    def read_dict(self, *args, **kwargs) -> None: ...
    def has_option(self, section, option): ...
    def remove_option(self, section, option, remove_default: bool = ...) -> None: ...
    def getsection(self, section): ...
    def write(self, fp, space_around_delimiters: bool = ...) -> None: ...
    def as_dict(self, display_source: bool = ..., display_sensitive: bool = ..., raw: bool = ..., include_env: bool = ..., include_cmds: bool = ..., include_secret: bool = ...): ...
    def load_test_config(self) -> None: ...

def mkdir_p(path) -> None: ...
def get_airflow_home(): ...
def get_airflow_config(airflow_home): ...

AIRFLOW_HOME: Any
AIRFLOW_CONFIG: Any
TEST_DAGS_FOLDER: Any
TEST_PLUGINS_FOLDER: Any

def parameterized_config(template): ...
def get_airflow_test_config(airflow_home): ...

TEST_CONFIG_FILE: Any
FERNET_KEY: Any
TEMPLATE_START: str
cfg: Any
conf: Any
msg: str
WEBSERVER_CONFIG: Any
DEFAULT_WEBSERVER_CONFIG: Any
load_test_config: Any
get: Any
getboolean: Any
getfloat: Any
getint: Any
getsection: Any
has_option: Any
remove_option: Any
as_dict: Any
set: Any
