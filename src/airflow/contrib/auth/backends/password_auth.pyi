from airflow import models as models
from airflow.utils.db import create_session as create_session, provide_session as provide_session
from flask_login import login_required as login_required, logout_user as logout_user
from sqlalchemy.ext.hybrid import hybrid_property as hybrid_property
from typing import Any
from wtforms import Form

LOGIN_MANAGER: Any
PY3: Any
log: Any
CLIENT_AUTH: Any

class AuthenticationError(Exception): ...

class PasswordUser(models.User):
    user: Any
    def __init__(self, user) -> None: ...
    def authenticate(self, plaintext): ...
    @property
    def is_active(self): ...
    @property
    def is_authenticated(self): ...
    @property
    def is_anonymous(self): ...
    def get_id(self): ...
    def data_profiling(self): ...
    def is_superuser(self): ...

def load_user(userid, session: Any | None = ...): ...
def authenticate(session, username, password): ...
def login(self, request, session: Any | None = ...): ...

class LoginForm(Form):
    username: Any
    password: Any

def init_app(_) -> None: ...
def requires_authentication(function): ...
