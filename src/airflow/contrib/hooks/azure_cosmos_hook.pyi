from airflow.exceptions import AirflowBadRequest as AirflowBadRequest
from airflow.hooks.base_hook import BaseHook as BaseHook
from typing import Any

class AzureCosmosDBHook(BaseHook):
    conn_id: Any
    connection: Any
    extras: Any
    endpoint_uri: Any
    master_key: Any
    default_database_name: Any
    default_collection_name: Any
    cosmos_client: Any
    def __init__(self, azure_cosmos_conn_id: str = ...) -> None: ...
    def get_conn(self): ...
    def does_collection_exist(self, collection_name, database_name: Any | None = ...): ...
    def create_collection(self, collection_name, database_name: Any | None = ...) -> None: ...
    def does_database_exist(self, database_name): ...
    def create_database(self, database_name) -> None: ...
    def delete_database(self, database_name) -> None: ...
    def delete_collection(self, collection_name, database_name: Any | None = ...) -> None: ...
    def upsert_document(self, document, database_name: Any | None = ..., collection_name: Any | None = ..., document_id: Any | None = ...): ...
    def insert_documents(self, documents, database_name: Any | None = ..., collection_name: Any | None = ...): ...
    def delete_document(self, document_id, database_name: Any | None = ..., collection_name: Any | None = ...) -> None: ...
    def get_document(self, document_id, database_name: Any | None = ..., collection_name: Any | None = ...): ...
    def get_documents(self, sql_string, database_name: Any | None = ..., collection_name: Any | None = ..., partition_key: Any | None = ...): ...

def get_database_link(database_id): ...
def get_collection_link(database_id, collection_id): ...
def get_document_link(database_id, collection_id, document_id): ...
