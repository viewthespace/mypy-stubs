from airflow.configuration import conf as conf
from airflow.utils.log.file_task_handler import FileTaskHandler as FileTaskHandler
from airflow.utils.log.logging_mixin import LoggingMixin as LoggingMixin
from typing import Any

class S3TaskHandler(FileTaskHandler, LoggingMixin):
    remote_base: Any
    log_relative_path: str
    closed: bool
    upload_on_close: bool
    def __init__(self, base_log_folder, s3_log_folder, filename_template) -> None: ...
    def hook(self): ...
    def set_context(self, ti) -> None: ...
    def close(self) -> None: ...
    def s3_log_exists(self, remote_log_location): ...
    def s3_read(self, remote_log_location, return_error: bool = ...): ...
    def s3_write(self, log, remote_log_location, append: bool = ...) -> None: ...
