from airflow.exceptions import AirflowConfigException as AirflowConfigException
from typing import Any

MAX_LABEL_LEN: int
MAX_POD_ID_LEN: int

class PodDefaults:
    def __init__(self) -> None: ...
    XCOM_MOUNT_PATH: str
    SIDECAR_CONTAINER_NAME: str
    XCOM_CMD: str
    VOLUME_MOUNT: Any
    VOLUME: Any
    SIDECAR_CONTAINER: Any

def make_safe_label_value(string): ...

class PodGenerator:
    ud_pod: Any
    pod: Any
    metadata: Any
    container: Any
    spec: Any
    extract_xcom: Any
    def __init__(self, image: Any | None = ..., name: Any | None = ..., namespace: Any | None = ..., volume_mounts: Any | None = ..., envs: Any | None = ..., cmds: Any | None = ..., args: Any | None = ..., labels: Any | None = ..., node_selectors: Any | None = ..., ports: Any | None = ..., volumes: Any | None = ..., image_pull_policy: Any | None = ..., restart_policy: Any | None = ..., image_pull_secrets: Any | None = ..., init_containers: Any | None = ..., service_account_name: Any | None = ..., resources: Any | None = ..., annotations: Any | None = ..., affinity: Any | None = ..., hostnetwork: bool = ..., tolerations: Any | None = ..., security_context: Any | None = ..., configmaps: Any | None = ..., dnspolicy: Any | None = ..., schedulername: Any | None = ..., priority_class_name: Any | None = ..., pod: Any | None = ..., pod_template_file: Any | None = ..., extract_xcom: bool = ...) -> None: ...
    def gen_pod(self): ...
    @staticmethod
    def make_unique_pod_id(dag_id): ...
    @staticmethod
    def add_sidecar(pod): ...
    @staticmethod
    def from_obj(obj): ...
    @staticmethod
    def reconcile_pods(base_pod, client_pod): ...
    @staticmethod
    def reconcile_metadata(base_meta, client_meta): ...
    @staticmethod
    def reconcile_specs(base_spec, client_spec): ...
    @staticmethod
    def reconcile_containers(base_containers, client_containers): ...
    @staticmethod
    def construct_pod(dag_id, task_id, pod_id, try_number, date, command, kube_executor_config, worker_config, namespace, worker_uuid): ...
    @staticmethod
    def deserialize_model_file(path): ...
    @staticmethod
    def validate_pod_generator_args(given_args): ...

def merge_objects(base_obj, client_obj): ...
def extend_object_field(base_obj, client_obj, field_name, field_to_merge: str = ...): ...
