from airflow.models.base import Base as Base, ID_LEN as ID_LEN
from airflow.models.crypto import InvalidFernetToken as InvalidFernetToken, get_fernet as get_fernet
from airflow.secrets import get_variable as get_variable
from airflow.utils.db import provide_session as provide_session
from airflow.utils.log.logging_mixin import LoggingMixin as LoggingMixin
from typing import Any

class Variable(Base, LoggingMixin):
    __tablename__: str
    id: Any
    key: Any
    is_encrypted: Any
    def get_val(self): ...
    def set_val(self, value) -> None: ...
    def val(cls): ...
    @classmethod
    def setdefault(cls, key, default, deserialize_json: bool = ...): ...
    @classmethod
    def get(cls, key: str, default_var: Any = ..., deserialize_json: bool = ..., session: Any | None = ...): ...
    @classmethod
    def set(cls, key: str, value: Any, serialize_json: bool = ..., session: Any | None = ...): ...
    @classmethod
    def delete(cls, key, session: Any | None = ...) -> None: ...
    def rotate_fernet_key(self) -> None: ...
