from airflow import conf as conf
from airflow.executors.base_executor import BaseExecutor as BaseExecutor
from airflow.utils.state import State as State
from typing import Any

class DebugExecutor(BaseExecutor):
    tasks_to_run: Any
    tasks_params: Any
    fail_fast: Any
    def __init__(self) -> None: ...
    def execute_async(self, *args, **kwargs) -> None: ...
    def sync(self) -> None: ...
    def queue_task_instance(self, task_instance, mark_success: bool = ..., pickle_id: Any | None = ..., ignore_all_deps: bool = ..., ignore_depends_on_past: bool = ..., ignore_task_deps: bool = ..., ignore_ti_state: bool = ..., pool: Any | None = ..., cfg_path: Any | None = ...) -> None: ...
    def trigger_tasks(self, open_slots): ...
    def end(self) -> None: ...
    def terminate(self) -> None: ...
    def change_state(self, key, state) -> None: ...
