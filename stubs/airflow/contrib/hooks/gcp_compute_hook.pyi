from airflow import AirflowException as AirflowException
from airflow.contrib.hooks.gcp_api_base_hook import GoogleCloudBaseHook as GoogleCloudBaseHook
from typing import Any

TIME_TO_SLEEP_IN_SECONDS: int

class GceOperationStatus:
    PENDING: str
    RUNNING: str
    DONE: str

class GceHook(GoogleCloudBaseHook):
    api_version: Any
    def __init__(self, api_version: str = ..., gcp_conn_id: str = ..., delegate_to: Any | None = ...) -> None: ...
    def get_conn(self): ...
    def start_instance(self, zone, resource_id, project_id: Any | None = ...) -> None: ...
    def stop_instance(self, zone, resource_id, project_id: Any | None = ...) -> None: ...
    def set_machine_type(self, zone, resource_id, body, project_id: Any | None = ...) -> None: ...
    def get_instance_template(self, resource_id, project_id: Any | None = ...): ...
    def insert_instance_template(self, body, request_id: Any | None = ..., project_id: Any | None = ...) -> None: ...
    def get_instance_group_manager(self, zone, resource_id, project_id: Any | None = ...): ...
    def patch_instance_group_manager(self, zone, resource_id, body, request_id: Any | None = ..., project_id: Any | None = ...) -> None: ...
