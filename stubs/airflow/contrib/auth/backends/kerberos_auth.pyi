from airflow import models as models
from airflow.configuration import conf as conf
from airflow.exceptions import AirflowConfigException as AirflowConfigException
from airflow.utils.db import provide_session as provide_session
from airflow.utils.log.logging_mixin import LoggingMixin as LoggingMixin
from flask_login import login_required as login_required, logout_user as logout_user
from typing import Any
from wtforms import Form

LOGIN_MANAGER: Any

class AuthenticationError(Exception): ...

class KerberosUser(models.User, LoggingMixin):
    user: Any
    def __init__(self, user) -> None: ...
    @staticmethod
    def authenticate(username, password) -> None: ...
    @property
    def is_active(self): ...
    @property
    def is_authenticated(self): ...
    @property
    def is_anonymous(self): ...
    def get_id(self): ...
    def data_profiling(self): ...
    def is_superuser(self): ...

def load_user(userid, session: Any | None = ...): ...
def login(self, request, session: Any | None = ...): ...

class LoginForm(Form):
    username: Any
    password: Any
