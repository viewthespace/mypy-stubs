from airflow import models as models
from airflow.configuration import AirflowConfigException as AirflowConfigException, conf as conf
from airflow.utils.db import provide_session as provide_session
from flask_login import login_required as login_required, logout_user as logout_user
from typing import Any
from wtforms import Form

LOGIN_MANAGER: Any
log: Any

class AuthenticationError(Exception): ...
class LdapException(Exception): ...

def get_ldap_connection(dn: Any | None = ..., password: Any | None = ...): ...
def group_contains_user(conn, search_base, group_filter, user_name_attr, username): ...
def groups_user(conn, search_base, user_filter, user_name_att, username): ...

class LdapUser(models.User):
    user: Any
    ldap_groups: Any
    superuser: bool
    data_profiler: bool
    def __init__(self, user) -> None: ...
    @staticmethod
    def try_login(username, password) -> None: ...
    @property
    def is_active(self): ...
    @property
    def is_authenticated(self): ...
    @property
    def is_anonymous(self): ...
    def get_id(self): ...
    def data_profiling(self): ...
    def is_superuser(self): ...

def load_user(userid, session: Any | None = ...): ...
def login(self, request, session: Any | None = ...): ...

class LoginForm(Form):
    username: Any
    password: Any
